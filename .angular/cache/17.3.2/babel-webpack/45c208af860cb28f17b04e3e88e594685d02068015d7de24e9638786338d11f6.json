{"ast":null,"code":"class SwalAlerts {\n  constructor() {\n    this.swalErrorLocation = (title = 'Error de ubicación', text = 'No se pudo obtener la ubicación actual, verifique su conexión o permita a la aplicación conocer su ubicación') => ({\n      html: `\n        <div>\n            <div class=\"iconSwal\"><i class=\"fas fa-map-marker-alt iconBorder\"></i></div><hr>\n            <h4 class='text-center'>${title}</h4>\n            <p style='font-size: 15px;' class='mt-4'>${text}</p>\n        </div>`,\n      showCancelButton: false,\n      showConfirmButton: false\n    });\n    this.swalAuthAction = (title = '¿Desea confirmar esta acción?', confirmButtonText = 'Si', cancelButtonText = 'No') => ({\n      title,\n      showConfirmButton: true,\n      confirmButtonText: confirmButtonText,\n      showCancelButton: true,\n      cancelButtonText: cancelButtonText,\n      icon: \"question\",\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      }\n    });\n    this.swalSuccess = (title = 'Acción completada', text = 'La acción se ha completado correctamente', buttonText = 'Entendido') => ({\n      title,\n      text,\n      icon: 'success',\n      showConfirmButton: true,\n      confirmButtonText: buttonText,\n      customClass: {\n        confirmButton: 'btn btn-success'\n      },\n      timer: 3000\n    });\n    this.swalError = (title = 'Error', text = 'Ha ocurrido un error desconocido', buttonText = 'Entendido') => ({\n      title,\n      text,\n      icon: \"error\",\n      showConfirmButton: true,\n      confirmButtonText: buttonText,\n      customClass: {\n        confirmButton: 'btn btn-danger'\n      },\n      timer: 3000\n    });\n    this.swalInfo = (text, buttonText = 'Entendido') => ({\n      text,\n      icon: \"info\",\n      showConfirmButton: true,\n      confirmButtonText: buttonText,\n      customClass: {\n        confirmButton: 'btn btn-info'\n      },\n      timer: 3000\n    });\n    this.swalRegisterUser = (title = 'Registro exitoso!', text = 'Se le ha enviado un correo electrónico') => ({\n      html: `\n        <div>\n            <div class=\"iconSwal\"><i class=\"fa-solid fa-user iconBorder success\"></i></div><hr>\n            <h4 class='text-center'>${title}</h4>\n            <p style='font-size: 15px;' class='mt-4'>${text}</p>\n        </div>`,\n      showCancelButton: false,\n      showConfirmButton: true,\n      confirmButtonText: 'Entendido',\n      customClass: {\n        confirmButton: 'btn btn-success'\n      },\n      timer: 3000\n    });\n    this.swalCustom = (html, custom) => ({\n      html,\n      ...custom\n    });\n  }\n}\nexport default new SwalAlerts();","map":{"version":3,"names":["SwalAlerts","constructor","swalErrorLocation","title","text","html","showCancelButton","showConfirmButton","swalAuthAction","confirmButtonText","cancelButtonText","icon","customClass","confirmButton","cancelButton","swalSuccess","buttonText","timer","swalError","swalInfo","swalRegisterUser","swalCustom","custom"],"sources":["C:\\Projects\\RecipesSharer\\web\\src\\app\\shared\\commons\\swal.common.ts"],"sourcesContent":["import { SweetAlertCustomClass, SweetAlertOptions } from 'sweetalert2';\r\nimport { Colors } from 'src/app/helpers';\r\n\r\nclass SwalAlerts {\r\n\r\n    swalErrorLocation = (\r\n        title: string = 'Error de ubicación',\r\n        text: string = 'No se pudo obtener la ubicación actual, verifique su conexión o permita a la aplicación conocer su ubicación',\r\n    ): SweetAlertOptions => ({\r\n        html: `\r\n        <div>\r\n            <div class=\"iconSwal\"><i class=\"fas fa-map-marker-alt iconBorder\"></i></div><hr>\r\n            <h4 class='text-center'>${title}</h4>\r\n            <p style='font-size: 15px;' class='mt-4'>${text}</p>\r\n        </div>`,\r\n        showCancelButton: false,\r\n        showConfirmButton: false\r\n    })\r\n\r\n    swalAuthAction = (\r\n        title: string = '¿Desea confirmar esta acción?',\r\n        confirmButtonText: string = 'Si',\r\n        cancelButtonText: string = 'No'\r\n    ): SweetAlertOptions => ({\r\n        title,\r\n        showConfirmButton: true,\r\n        confirmButtonText: confirmButtonText,\r\n        showCancelButton: true,\r\n        cancelButtonText: cancelButtonText,\r\n        icon: \"question\",\r\n        customClass: {\r\n            confirmButton: 'btn btn-success',\r\n            cancelButton: 'btn btn-danger'\r\n        }\r\n    });\r\n\r\n    swalSuccess = (\r\n        title: string = 'Acción completada',\r\n        text: string = 'La acción se ha completado correctamente',\r\n        buttonText: string = 'Entendido'\r\n    ): SweetAlertOptions => ({\r\n        title,\r\n        text,\r\n        icon: 'success',\r\n        showConfirmButton: true,\r\n        confirmButtonText: buttonText,\r\n        customClass: {\r\n            confirmButton: 'btn btn-success'\r\n        },\r\n        timer: 3000\r\n    });\r\n\r\n    swalError = (\r\n        title: string = 'Error',\r\n        text: string = 'Ha ocurrido un error desconocido',\r\n        buttonText: string = 'Entendido'\r\n    ): SweetAlertOptions => ({\r\n        title,\r\n        text,\r\n        icon: \"error\",\r\n        showConfirmButton: true,\r\n        confirmButtonText: buttonText,\r\n        customClass: {\r\n            confirmButton: 'btn btn-danger'\r\n        },\r\n        timer: 3000\r\n    });\r\n\r\n    swalInfo = (\r\n        text: string,\r\n        buttonText: string = 'Entendido'\r\n    ): SweetAlertOptions => ({\r\n        text,\r\n        icon: \"info\",\r\n        showConfirmButton: true,\r\n        confirmButtonText: buttonText,\r\n        customClass: {\r\n            confirmButton: 'btn btn-info'\r\n        },\r\n        timer: 3000\r\n    });\r\n\r\n    swalRegisterUser = (\r\n        title: string = 'Registro exitoso!',\r\n        text: string = 'Se le ha enviado un correo electrónico',\r\n    ): SweetAlertOptions => ({\r\n        html: `\r\n        <div>\r\n            <div class=\"iconSwal\"><i class=\"fa-solid fa-user iconBorder success\"></i></div><hr>\r\n            <h4 class='text-center'>${title}</h4>\r\n            <p style='font-size: 15px;' class='mt-4'>${text}</p>\r\n        </div>`,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonText: 'Entendido',\r\n        customClass: {\r\n            confirmButton: 'btn btn-success'\r\n        },\r\n        timer: 3000\r\n    });\r\n\r\n    swalCustom = (\r\n        html: string,\r\n        custom?: SweetAlertOptions\r\n    ): SweetAlertOptions => ({\r\n        html,\r\n        ...custom,\r\n    });\r\n}\r\nexport default new SwalAlerts();"],"mappings":"AAGA,MAAMA,UAAU;EAAhBC,YAAA;IAEI,KAAAC,iBAAiB,GAAG,CAChBC,KAAA,GAAgB,oBAAoB,EACpCC,IAAA,GAAe,8GAA8G,MACxG;MACrBC,IAAI,EAAE;;;sCAGwBF,KAAK;uDACYC,IAAI;eAC5C;MACPE,gBAAgB,EAAE,KAAK;MACvBC,iBAAiB,EAAE;KACtB,CAAC;IAEF,KAAAC,cAAc,GAAG,CACbL,KAAA,GAAgB,+BAA+B,EAC/CM,iBAAA,GAA4B,IAAI,EAChCC,gBAAA,GAA2B,IAAI,MACV;MACrBP,KAAK;MACLI,iBAAiB,EAAE,IAAI;MACvBE,iBAAiB,EAAEA,iBAAiB;MACpCH,gBAAgB,EAAE,IAAI;MACtBI,gBAAgB,EAAEA,gBAAgB;MAClCC,IAAI,EAAE,UAAU;MAChBC,WAAW,EAAE;QACTC,aAAa,EAAE,iBAAiB;QAChCC,YAAY,EAAE;;KAErB,CAAC;IAEF,KAAAC,WAAW,GAAG,CACVZ,KAAA,GAAgB,mBAAmB,EACnCC,IAAA,GAAe,0CAA0C,EACzDY,UAAA,GAAqB,WAAW,MACX;MACrBb,KAAK;MACLC,IAAI;MACJO,IAAI,EAAE,SAAS;MACfJ,iBAAiB,EAAE,IAAI;MACvBE,iBAAiB,EAAEO,UAAU;MAC7BJ,WAAW,EAAE;QACTC,aAAa,EAAE;OAClB;MACDI,KAAK,EAAE;KACV,CAAC;IAEF,KAAAC,SAAS,GAAG,CACRf,KAAA,GAAgB,OAAO,EACvBC,IAAA,GAAe,kCAAkC,EACjDY,UAAA,GAAqB,WAAW,MACX;MACrBb,KAAK;MACLC,IAAI;MACJO,IAAI,EAAE,OAAO;MACbJ,iBAAiB,EAAE,IAAI;MACvBE,iBAAiB,EAAEO,UAAU;MAC7BJ,WAAW,EAAE;QACTC,aAAa,EAAE;OAClB;MACDI,KAAK,EAAE;KACV,CAAC;IAEF,KAAAE,QAAQ,GAAG,CACPf,IAAY,EACZY,UAAA,GAAqB,WAAW,MACX;MACrBZ,IAAI;MACJO,IAAI,EAAE,MAAM;MACZJ,iBAAiB,EAAE,IAAI;MACvBE,iBAAiB,EAAEO,UAAU;MAC7BJ,WAAW,EAAE;QACTC,aAAa,EAAE;OAClB;MACDI,KAAK,EAAE;KACV,CAAC;IAEF,KAAAG,gBAAgB,GAAG,CACfjB,KAAA,GAAgB,mBAAmB,EACnCC,IAAA,GAAe,wCAAwC,MAClC;MACrBC,IAAI,EAAE;;;sCAGwBF,KAAK;uDACYC,IAAI;eAC5C;MACPE,gBAAgB,EAAE,KAAK;MACvBC,iBAAiB,EAAE,IAAI;MACvBE,iBAAiB,EAAE,WAAW;MAC9BG,WAAW,EAAE;QACTC,aAAa,EAAE;OAClB;MACDI,KAAK,EAAE;KACV,CAAC;IAEF,KAAAI,UAAU,GAAG,CACThB,IAAY,EACZiB,MAA0B,MACL;MACrBjB,IAAI;MACJ,GAAGiB;KACN,CAAC;EACN;;AACA,eAAe,IAAItB,UAAU,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}