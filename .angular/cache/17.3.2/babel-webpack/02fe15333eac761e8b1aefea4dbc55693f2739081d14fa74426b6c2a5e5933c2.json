{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n// Internal modules\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { PatientModule } from 'src/app/web/pages/patient/patient.module';\nimport { ChatModule } from './chat/chat.module';\nimport { DoctorModule } from 'src/app/web/pages/doctor/doctor.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}, {\n  path: '',\n  loadChildren: () => import('src/app/web/pages/auth/auth.module').then(mod => mod.AuthModule)\n}, {\n  path: 'profile',\n  loadChildren: () => import('src/app/web/pages/profile/profile.module').then(mod => mod.ProfileModule)\n}, {\n  path: 'patient',\n  loadChildren: () => import('src/app/web/pages/patient/patient.module').then(mod => mod.PatientModule)\n}, {\n  path: 'chat',\n  loadChildren: () => import('src/app/web/pages/chat/chat.module').then(mod => mod.ChatModule)\n}, {\n  path: 'doctor',\n  loadChildren: () => import('src/app/web/pages/doctor/doctor.module').then(mod => mod.DoctorModule)\n}];\nexport class PagesModule {\n  static #_ = this.ɵfac = function PagesModule_Factory(t) {\n    return new (t || PagesModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: PagesModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forChild(routes), CommonModule, HttpClientModule, SharedModule,\n    // Modules\n    ProfileModule, PatientModule, ChatModule, DoctorModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagesModule, {\n    imports: [i1.RouterModule, CommonModule, HttpClientModule, SharedModule,\n    // Modules\n    ProfileModule, PatientModule, ChatModule, DoctorModule]\n  });\n})();","map":{"version":3,"names":["CommonModule","RouterModule","HttpClientModule","ProfileModule","SharedModule","PatientModule","ChatModule","DoctorModule","routes","path","redirectTo","pathMatch","loadChildren","then","mod","AuthModule","PagesModule","_","_2","_3","forChild","imports","i1"],"sources":["C:\\Projects\\RecipesSharer\\web\\src\\app\\web\\pages\\pages.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Internal modules\r\n\r\nimport { ProfileModule } from './profile/profile.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { PatientModule } from 'src/app/web/pages/patient/patient.module';\r\nimport { ChatModule } from './chat/chat.module';\r\nimport { DoctorModule } from 'src/app/web/pages/doctor/doctor.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('src/app/web/pages/auth/auth.module').then(mod => mod.AuthModule)\r\n  },\r\n  {\r\n    path: 'profile',\r\n    loadChildren: () => import('src/app/web/pages/profile/profile.module').then(mod => mod.ProfileModule)\r\n  },\r\n  {\r\n    path: 'patient',\r\n    loadChildren: () => import('src/app/web/pages/patient/patient.module').then(mod => mod.PatientModule)\r\n  },\r\n  {\r\n    path: 'chat',\r\n    loadChildren: () => import('src/app/web/pages/chat/chat.module').then(mod => mod.ChatModule)\r\n  },\r\n  {\r\n    path: 'doctor',\r\n    loadChildren: () => import('src/app/web/pages/doctor/doctor.module').then(mod => mod.DoctorModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n\r\n    // Modules\r\n    ProfileModule,\r\n    PatientModule,\r\n    ChatModule,\r\n    DoctorModule\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAiBC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,gBAAgB,QAAQ,sBAAsB;AAEvD;AAEA,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,aAAa,QAAQ,0CAA0C;AACxE,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,YAAY,QAAQ,wCAAwC;;;AAErE,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,QAAQ;EACpBC,SAAS,EAAE;CACZ,EACD;EACEF,IAAI,EAAE,EAAE;EACRG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU;CAC5F,EACD;EACEN,IAAI,EAAE,SAAS;EACfG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,0CAA0C,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACX,aAAa;CACrG,EACD;EACEM,IAAI,EAAE,SAAS;EACfG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,0CAA0C,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACT,aAAa;CACrG,EACD;EACEI,IAAI,EAAE,MAAM;EACZG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,UAAU;CAC5F,EACD;EACEG,IAAI,EAAE,QAAQ;EACdG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,wCAAwC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACP,YAAY;CAClG,CACF;AAmBD,OAAM,MAAOS,WAAW;EAAA,QAAAC,CAAA,G;qBAAXD,WAAW;EAAA;EAAA,QAAAE,EAAA,G;UAAXF;EAAW;EAAA,QAAAG,EAAA,G;cAZpBlB,YAAY,CAACmB,QAAQ,CAACZ,MAAM,CAAC,EAC7BR,YAAY,EACZE,gBAAgB,EAChBE,YAAY;IAEZ;IACAD,aAAa,EACbE,aAAa,EACbC,UAAU,EACVC,YAAY;EAAA;;;2EAGHS,WAAW;IAAAK,OAAA,GAAAC,EAAA,CAAArB,YAAA,EAXpBD,YAAY,EACZE,gBAAgB,EAChBE,YAAY;IAEZ;IACAD,aAAa,EACbE,aAAa,EACbC,UAAU,EACVC,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}