{"ast":null,"code":"import Events from './sockets.events';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nexport class PatientSocketsService {\n  constructor(socket) {\n    this.socket = socket;\n  }\n  // Patient - chat\n  newMessage(message, sender_id, session_id) {\n    this.socket.emit(Events.CHAT.NEW_MESSAGE, {\n      message,\n      sender_id,\n      session_id\n    });\n  }\n  on(event, callback) {\n    return this.socket.on(event, callback);\n  }\n  static #_ = this.ɵfac = function PatientSocketsService_Factory(t) {\n    return new (t || PatientSocketsService)(i0.ɵɵinject(i1.Socket));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PatientSocketsService,\n    factory: PatientSocketsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Events","PatientSocketsService","constructor","socket","newMessage","message","sender_id","session_id","emit","CHAT","NEW_MESSAGE","on","event","callback","_","i0","ɵɵinject","i1","Socket","_2","factory","ɵfac","providedIn"],"sources":["C:\\Projects\\RecipesSharer\\web\\src\\app\\services\\sockets\\patient\\sockets.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport Events from './sockets.events';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientSocketsService {\r\n\r\n  constructor(\r\n    private socket: Socket\r\n  ) { }\r\n    \r\n  // Patient - chat\r\n\r\n  newMessage(message: string, sender_id: number, session_id: number) {\r\n    this.socket.emit(Events.CHAT.NEW_MESSAGE, {\r\n      message,\r\n      sender_id,\r\n      session_id\r\n    });\r\n  }\r\n\r\n  on(event: string, callback: (data?: unknown) => void) {\r\n    return this.socket.on(event, callback)\r\n  }\r\n}\r\n"],"mappings":"AAEA,OAAOA,MAAM,MAAM,kBAAkB;;;AAKrC,OAAM,MAAOC,qBAAqB;EAEhCC,YACUC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EACZ;EAEJ;EAEAC,UAAUA,CAACC,OAAe,EAAEC,SAAiB,EAAEC,UAAkB;IAC/D,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACR,MAAM,CAACS,IAAI,CAACC,WAAW,EAAE;MACxCL,OAAO;MACPC,SAAS;MACTC;KACD,CAAC;EACJ;EAEAI,EAAEA,CAACC,KAAa,EAAEC,QAAkC;IAClD,OAAO,IAAI,CAACV,MAAM,CAACQ,EAAE,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAlBUb,qBAAqB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBlB,qBAAqB;IAAAmB,OAAA,EAArBnB,qBAAqB,CAAAoB,IAAA;IAAAC,UAAA,EAFpB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}