{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FileSizePipe {\n  constructor() {\n    this.transform = size => size > 1024 && size < 1048576 ? `${(size / 1024).toFixed(2)} KB` : size >= 1048576 && size < 1073741824 ? `${(size / 1048576).toFixed(2)} MB` : size >= 1073741824 && size < 1099511627776 ? `${(size / 1073741824).toFixed(2)} GB` : size >= 1099511627776 ? `${(size / 1073741824 * 1024).toFixed(2)} TB` : `${size.toFixed(2)} Bytes`;\n  }\n  static #_ = this.ɵfac = function FileSizePipe_Factory(t) {\n    return new (t || FileSizePipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filesize\",\n    type: FileSizePipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["FileSizePipe","constructor","transform","size","toFixed","_","_2","pure"],"sources":["C:\\Projects\\RecipesSharer\\web\\src\\app\\pipes\\file-size.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filesize'\r\n})\r\n\r\nexport class FileSizePipe implements PipeTransform {\r\n  transform = (size: number) => (size > 1024 && size < 1048576) ? `${(size / 1024).toFixed(2)} KB` :\r\n    (size >= 1048576 && size < 1073741824) ? `${(size / 1048576).toFixed(2)} MB` :\r\n      (size >= 1073741824 && size < 1099511627776) ? `${(size / 1073741824).toFixed(2)} GB` :\r\n        (size >= 1099511627776) ? `${(size / 1073741824 * 1024).toFixed(2)} TB` : `${size.toFixed(2)} Bytes`\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,YAAY;EAJzBC,YAAA;IAKE,KAAAC,SAAS,GAAIC,IAAY,IAAMA,IAAI,GAAG,IAAI,IAAIA,IAAI,GAAG,OAAO,GAAI,GAAG,CAACA,IAAI,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,KAAK,GAC7FD,IAAI,IAAI,OAAO,IAAIA,IAAI,GAAG,UAAU,GAAI,GAAG,CAACA,IAAI,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,KAAK,GACzED,IAAI,IAAI,UAAU,IAAIA,IAAI,GAAG,aAAa,GAAI,GAAG,CAACA,IAAI,GAAG,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC,KAAK,GAClFD,IAAI,IAAI,aAAa,GAAI,GAAG,CAACA,IAAI,GAAG,UAAU,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGD,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,QAAQ;;EAC3G,QAAAC,CAAA,G;qBALYL,YAAY;EAAA;EAAA,QAAAM,EAAA,G;;UAAZN,YAAY;IAAAO,IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}