{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API = 'patient/associates/';\nexport class AssociatesService {\n  constructor(http) {\n    this.http = http;\n    this.addAssociated = body => this.http.post(`${API}new_associated`, body).toPromise();\n    this.getAll = (user_id, page = undefined) => page === undefined ? this.http.get(`${API}getAll/${user_id}`).toPromise() : this.http.get(`${API}getAll/${user_id}/${page}`).toPromise();\n    this.getAssociated = user_id => this.http.get(`${API}getAssociated/${user_id}`);\n    this.modifyAssociated = body => this.http.put(`${API}modifyAssociated`, body);\n  }\n  static #_ = this.ɵfac = function AssociatesService_Factory(t) {\n    return new (t || AssociatesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AssociatesService,\n    factory: AssociatesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API","AssociatesService","constructor","http","addAssociated","body","post","toPromise","getAll","user_id","page","undefined","get","getAssociated","modifyAssociated","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Projects\\RecipesSharer\\web\\src\\app\\services\\patient\\associates.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n    GetAssociatedDTO,\r\n    Associated,\r\n    ModifyAssociatedDTO,\r\n    User\r\n} from 'src/app/dtos';\r\nimport { IPATIENTS } from 'src/app/interfaces';\r\n\r\nconst API = 'patient/associates/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AssociatesService implements IPATIENTS {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  addAssociated = (body: any) => this.http.post<GetAssociatedDTO>(`${API}new_associated`, body).toPromise();\r\n\r\n  getAll = (user_id: number, page: number | undefined = undefined) => \r\n    page === undefined ? this.http.get<GetAssociatedDTO | User[]>(`${API}getAll/${user_id}`).toPromise()\r\n    : this.http.get<GetAssociatedDTO | User[]>(`${API}getAll/${user_id}/${page}`).toPromise();\r\n\r\n  getAssociated = (user_id: number) => this.http.get<Associated>(`${API}getAssociated/${user_id}`);\r\n\r\n  modifyAssociated = (body: ModifyAssociatedDTO) => this.http.put<Associated>(`${API}modifyAssociated`, body);\r\n}\r\n"],"mappings":";;AAUA,MAAMA,GAAG,GAAG,qBAAqB;AAKjC,OAAM,MAAOC,iBAAiB;EAE5BC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAGd,KAAAC,aAAa,GAAIC,IAAS,IAAK,IAAI,CAACF,IAAI,CAACG,IAAI,CAAmB,GAAGN,GAAG,gBAAgB,EAAEK,IAAI,CAAC,CAACE,SAAS,EAAE;IAEzG,KAAAC,MAAM,GAAG,CAACC,OAAe,EAAEC,IAAA,GAA2BC,SAAS,KAC7DD,IAAI,KAAKC,SAAS,GAAG,IAAI,CAACR,IAAI,CAACS,GAAG,CAA4B,GAAGZ,GAAG,UAAUS,OAAO,EAAE,CAAC,CAACF,SAAS,EAAE,GAClG,IAAI,CAACJ,IAAI,CAACS,GAAG,CAA4B,GAAGZ,GAAG,UAAUS,OAAO,IAAIC,IAAI,EAAE,CAAC,CAACH,SAAS,EAAE;IAE3F,KAAAM,aAAa,GAAIJ,OAAe,IAAK,IAAI,CAACN,IAAI,CAACS,GAAG,CAAa,GAAGZ,GAAG,iBAAiBS,OAAO,EAAE,CAAC;IAEhG,KAAAK,gBAAgB,GAAIT,IAAyB,IAAK,IAAI,CAACF,IAAI,CAACY,GAAG,CAAa,GAAGf,GAAG,kBAAkB,EAAEK,IAAI,CAAC;EAVvG;EAAC,QAAAW,CAAA,G;qBAJMf,iBAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpB,iBAAiB;IAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;IAAAC,UAAA,EAFhB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}