{"ast":null,"code":"import * as PrintJS from 'print-js';\nimport { Globals } from 'src/app/helpers';\nimport * as i0 from \"@angular/core\";\nexport class PrintComponent {\n  constructor() {\n    this.url = '';\n    this.buttonText = 'Imprimir';\n    this.isPDF = false;\n    this.print = () => {\n      const url = this.url;\n      const isPDF = this.isPDF;\n      if (Globals.isImage(url)) {\n        const img = new Image();\n        img.src = url;\n        img.onload = () => {\n          PrintJS({\n            printable: url,\n            type: 'image'\n          });\n        };\n      } else if (Globals.isPdf(url) || isPDF) {\n        PrintJS({\n          printable: url\n        });\n      } else {\n        window.open(url);\n      }\n    };\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function PrintComponent_Factory(t) {\n    return new (t || PrintComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PrintComponent,\n    selectors: [[\"app-print\"]],\n    inputs: {\n      url: \"url\",\n      buttonText: \"buttonText\",\n      isPDF: \"isPDF\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"print\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n    template: function PrintComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function PrintComponent_Template_button_click_1_listener() {\n          return ctx.print();\n        });\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.buttonText, \" \");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["PrintJS","Globals","PrintComponent","constructor","url","buttonText","isPDF","print","isImage","img","Image","src","onload","printable","type","isPdf","window","open","ngOnInit","_","_2","selectors","inputs","decls","vars","consts","template","PrintComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","PrintComponent_Template_button_click_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Projects\\RecipesSharer\\web\\src\\app\\shared\\print\\print.component.ts","C:\\Projects\\RecipesSharer\\web\\src\\app\\shared\\print\\print.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport * as PrintJS from 'print-js';\r\nimport { Globals } from 'src/app/helpers';\r\n\r\n@Component({\r\n  selector: 'app-print',\r\n  templateUrl: './print.component.html',\r\n  styleUrls: ['./print.component.css']\r\n})\r\nexport class PrintComponent implements OnInit {\r\n\r\n  @Input('url') url: string = '';\r\n  @Input('buttonText') buttonText: string = 'Imprimir';\r\n  @Input('isPDF') isPDF: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  print = () => {\r\n    const url = this.url;\r\n    const isPDF = this.isPDF;\r\n    if (Globals.isImage(url)) {\r\n      const img = new Image();\r\n      img.src = url;\r\n      img.onload = () => {\r\n        PrintJS({\r\n          printable: url,\r\n          type: 'image'\r\n        });\r\n      }\r\n    }\r\n    else if (Globals.isPdf(url) || isPDF) {\r\n      PrintJS({\r\n        printable: url\r\n      });\r\n    }\r\n    else {\r\n      window.open(url);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"print\">\r\n    <button class=\"btn btn-info\" (click)=\"print()\">\r\n        {{ buttonText }}\r\n    </button>\r\n</div>"],"mappings":"AACA,OAAO,KAAKA,OAAO,MAAM,UAAU;AACnC,SAASC,OAAO,QAAQ,iBAAiB;;AAOzC,OAAM,MAAOC,cAAc;EAMzBC,YAAA;IAJc,KAAAC,GAAG,GAAW,EAAE;IACT,KAAAC,UAAU,GAAW,UAAU;IACpC,KAAAC,KAAK,GAAY,KAAK;IAQtC,KAAAC,KAAK,GAAG,MAAK;MACX,MAAMH,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAME,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIL,OAAO,CAACO,OAAO,CAACJ,GAAG,CAAC,EAAE;QACxB,MAAMK,GAAG,GAAG,IAAIC,KAAK,EAAE;QACvBD,GAAG,CAACE,GAAG,GAAGP,GAAG;QACbK,GAAG,CAACG,MAAM,GAAG,MAAK;UAChBZ,OAAO,CAAC;YACNa,SAAS,EAAET,GAAG;YACdU,IAAI,EAAE;WACP,CAAC;QACJ,CAAC;MACH,CAAC,MACI,IAAIb,OAAO,CAACc,KAAK,CAACX,GAAG,CAAC,IAAIE,KAAK,EAAE;QACpCN,OAAO,CAAC;UACNa,SAAS,EAAET;SACZ,CAAC;MACJ,CAAC,MACI;QACHY,MAAM,CAACC,IAAI,CAACb,GAAG,CAAC;MAClB;IACF,CAAC;EA3Be;EAEhBc,QAAQA,CAAA,GAER;EAAC,QAAAC,CAAA,G;qBAVUjB,cAAc;EAAA;EAAA,QAAAkB,EAAA,G;UAAdlB,cAAc;IAAAmB,SAAA;IAAAC,MAAA;MAAAlB,GAAA;MAAAC,UAAA;MAAAC,KAAA;IAAA;IAAAiB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRvBE,EADJ,CAAAC,cAAA,aAAmB,gBACgC;QAAlBD,EAAA,CAAAE,UAAA,mBAAAC,gDAAA;UAAA,OAASJ,GAAA,CAAAtB,KAAA,EAAO;QAAA,EAAC;QAC1CuB,EAAA,CAAAI,MAAA,GACJ;QACJJ,EADI,CAAAK,YAAA,EAAS,EACP;;;QAFEL,EAAA,CAAAM,SAAA,GACJ;QADIN,EAAA,CAAAO,kBAAA,MAAAR,GAAA,CAAAxB,UAAA,MACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}